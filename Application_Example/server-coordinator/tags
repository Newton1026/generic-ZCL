!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK_FORMAT_FIELD_DISABLE	source/aps.c	38;"	d	file:
ACK_FORMAT_FIELD_ENABLE	source/aps.c	39;"	d	file:
ACK_REQUEST_SUB_FIELD_DISABLE	source/aps.c	42;"	d	file:
ACK_REQUEST_SUB_FIELD_ENABLE	source/aps.c	43;"	d	file:
ADSU	include/APS.h	/^    uint8_t ADSU[100];$/;"	m	struct:DATA_Request
ADSU	include/APS.h	/^    uint8_t ADSU[100];$/;"	m	struct:__anon4
ADSULength	include/APS.h	/^    uint8_t ADSULength;$/;"	m	struct:DATA_Request
ADSULength	include/APS.h	/^    uint8_t ADSULength;$/;"	m	struct:__anon4
ADSU_TOO_LONG	include/APS.h	/^    ADSU_TOO_LONG,$/;"	e	enum:__anon1
APDE_NWK	source/nwk.c	/^int APDE_NWK( NwkMsg_t *msg )$/;"	f
APDE_ZCL_Handler	source/aps.c	/^void ( *APDE_ZCL_Handler )( DataIndication_t );$/;"	v
APME_DeivceRemove_Handler	source/aps.c	/^void ( *APME_DeivceRemove_Handler )( uint16_t );$/;"	v
APME_Deviceremove_Saphandler	source/zdo.c	/^void APME_Deviceremove_Saphandler( uint16_t device_ID )$/;"	f
APME_ZDO_Handler	source/aps.c	/^void ( *APME_ZDO_Handler )(DataIndication_t );$/;"	v
APME_ZDO_Saphandler	source/zdo.c	/^void APME_ZDO_Saphandler( DataIndication_t IndicationData )$/;"	f
APSDE_DATA_Indication	source/aps.c	/^void APSDE_DATA_Indication( frame_t MsgDecode, int len, uint16_t devId )$/;"	f
APSDE_DATA_Request	source/aps.c	/^void APSDE_DATA_Request( struct DATA_Request *req )$/;"	f
APSKEY	source/aps.c	20;"	d	file:
APSPacket	source/aps.c	/^frame_t *APSPacket;$/;"	v
APS_COUNTER	source/aps.c	27;"	d	file:
APS_Frame	include/APS.h	/^typedef struct APS_Frame{$/;"	s
APS_RegisterSapHandlers	source/aps.c	/^void APS_RegisterSapHandlers(void (*APME_ZDO_SapHandler)( DataIndication_t MsgDecode ), void (*APDE_ZCL_SapHandler)( DataIndication_t MsgDecode ), void (*DeviceRemove)( uint16_t ID ) )$/;"	f
APS_init	source/aps.c	/^void APS_init()$/;"	f
AckFormat	include/APS.h	/^        char AckFormat:1;$/;"	m	struct:__anon2::__anon3
AckRequest	include/APS.h	/^        char AckRequest:1;$/;"	m	struct:__anon2::__anon3
AddDeviceInList	source/nwk.c	/^void AddDeviceInList( int id, char ip[] )$/;"	f
BIN_DIR	Makefile	/^BIN_DIR = $(PWD)\/bin$/;"	m
BulbData	include/myutility.h	/^}BulbData;$/;"	t	typeref:struct:__anon14
CC	Makefile	/^CC = gcc$/;"	m
CLIENT_TO_SERVER	include/frame_structure.h	/^	CLIENT_TO_SERVER					=0b00000000,$/;"	e	enum:__anon12
CLUSTER_COMMAND_H	include/cluster_command.h	20;"	d
CLUSTER_IDENTIFIER	source/aps.c	24;"	d	file:
CLUSTER_ID_H	include/cluster_id.h	18;"	d
CONFIGURE_REPORTING_ID	include/frame_structure.h	/^	CONFIGURE_REPORTING_ID						= 0X06,$/;"	e	enum:__anon11
CONFIGURE_REPORTING_RESPONSE_ID	include/frame_structure.h	/^	CONFIGURE_REPORTING_RESPONSE_ID				= 0X07,$/;"	e	enum:__anon11
ClientInit	source/nwk.c	/^int ClientInit( void )$/;"	f
ClusterId	include/APS.h	/^    uint16_t ClusterId;$/;"	m	struct:DATA_Request
ClusterId	include/APS.h	/^    uint16_t ClusterId;$/;"	m	struct:__anon4
ControlField	include/APS.h	/^    FrameControl_t ControlField;$/;"	m	struct:APS_Frame
DATA_Request	include/APS.h	/^struct DATA_Request$/;"	s
DEBUG	include/global.h	20;"	d
DEFAULT_RESPONSE_ID	include/frame_structure.h	/^	DEFAULT_RESPONSE_ID							= 0X0b,$/;"	e	enum:__anon11
DELIVERY_MODE_BROADCAST	source/aps.c	36;"	d	file:
DELIVERY_MODE_GROUP	source/aps.c	37;"	d	file:
DELIVERY_MODE_INDIRECT	source/aps.c	35;"	d	file:
DELIVERY_MODE_UNICAST	source/aps.c	34;"	d	file:
DESTINATION_ENDPOINT	source/aps.c	22;"	d	file:
DISABLE_DEFAULT_RESPONSE	include/frame_structure.h	/^	DISABLE_DEFAULT_RESPONSE			=0b00010000,$/;"	e	enum:__anon12
DISCOVER_ATTRIBUTE_ID	include/frame_structure.h	/^	DISCOVER_ATTRIBUTE_ID						= 0X0c,$/;"	e	enum:__anon11
DISCOVER_ATTRIBUTE_RESPONSE_ID	include/frame_structure.h	/^	DISCOVER_ATTRIBUTE_RESPONSE_ID				= 0X0d,$/;"	e	enum:__anon11
DataIndication_t	include/APS.h	/^}PACKED DataIndication_t;$/;"	t	typeref:struct:__anon4
DeliveryMode	include/APS.h	/^        char DeliveryMode:2;$/;"	m	struct:__anon2::__anon3
DeviceList	source/nwk.c	/^} DeviceList;$/;"	t	typeref:struct:list	file:
DeviceRemove	source/aps.c	/^void DeviceRemove( uint16_t device_ID )$/;"	f
DeviceRemove_Handler	source/nwk.c	/^void ( *DeviceRemove_Handler )( uint16_t ID );$/;"	v
DstAddrMode	include/APS.h	/^    uint8_t DstAddrMode;$/;"	m	struct:DATA_Request
DstAddrMode	include/APS.h	/^    uint8_t DstAddrMode;$/;"	m	struct:__anon4
DstAddress	include/APS.h	/^    uint8_t DstAddress;	$/;"	m	struct:DATA_Request
DstAddress	include/APS.h	/^    uint8_t DstAddress;	$/;"	m	struct:__anon4
DstEndpoint	include/APS.h	/^    uint8_t DstEndpoint;$/;"	m	struct:DATA_Request
DstEndpoint	include/APS.h	/^    uint8_t DstEndpoint;$/;"	m	struct:__anon4
ENABLE_DEFAULT_RESPONSE	include/frame_structure.h	/^	ENABLE_DEFAULT_RESPONSE				=0b00000000,$/;"	e	enum:__anon12
EXCLUDE_MANUFACTURER_SPECIFIC	include/frame_structure.h	/^	EXCLUDE_MANUFACTURER_SPECIFIC		=0b00000000,$/;"	e	enum:__anon12
EXE	Makefile	/^EXE = server $/;"	m
EXTENDED_HEADER_ABSENT	source/aps.c	45;"	d	file:
EXTENDED_HEADER_PRESENT	source/aps.c	44;"	d	file:
ExtendedHeaderPresent	include/APS.h	/^        char ExtendedHeaderPresent:1;$/;"	m	struct:__anon2::__anon3
FRAMESTRUCTURE_H	include/frame_structure.h	18;"	d
FRAME_TYPE	source/aps.c	21;"	d	file:
FRAME_TYPE_ACK	source/aps.c	33;"	d	file:
FRAME_TYPE_CLUSTER_SPECIFIC	include/frame_structure.h	/^	FRAME_TYPE_CLUSTER_SPECIFIC			=0b00000001,$/;"	e	enum:__anon12
FRAME_TYPE_COMMAND	source/aps.c	32;"	d	file:
FRAME_TYPE_DATA	source/aps.c	31;"	d	file:
FRAME_TYPE_ENTIRE_PROFILE	include/frame_structure.h	/^	FRAME_TYPE_ENTIRE_PROFILE			=0b00000000,$/;"	e	enum:__anon12
FindId	source/nwk.c	/^int FindId()$/;"	f
FrameControl_t	include/APS.h	/^}PACKED FrameControl_t;$/;"	t	typeref:union:__anon2
FrameType	include/APS.h	/^        char FrameType:2;$/;"	m	struct:__anon2::__anon3
GLOBAL_H	include/global.h	18;"	d
GROUP_ADDRESS	source/aps.c	23;"	d	file:
GiveId	source/nwk.c	/^uint16_t GiveId(int client_socket)$/;"	f
INC	Makefile	/^INC = $(PWD)\/include$/;"	m
INCLUDE_MANUFACTURER_SPECIFIC	include/frame_structure.h	/^	INCLUDE_MANUFACTURER_SPECIFIC		=0b00000100,$/;"	e	enum:__anon12
INVALID_ATTRIBUTE	include/global.h	53;"	d
INVALID_CLUSTERID	include/global.h	54;"	d
LD_FLAG	Makefile	/^LD_FLAG = -lpthread$/;"	m
LinkQuality	include/APS.h	/^    uint8_t LinkQuality;$/;"	m	struct:__anon4
MAXDEVICE	source/nwk.c	27;"	d	file:
MAXSIZE	source/nwk.c	26;"	d	file:
MCPS_ZCL_Handler	source/nwk.c	/^void (*MCPS_ZCL_Handler)( NwkMsg_t );$/;"	v
MCPS_ZCL_SapHandler	source/aps.c	/^void MCPS_ZCL_SapHandler( NwkMsg_t msg )$/;"	f
MESSAGE_LENGTH	include/zdo.h	27;"	d
MESSAGE_TYPE	include/zdo.h	26;"	d
MSG_DEVICE_ANNOUNCE	include/zdo.h	/^    MSG_DEVICE_ANNOUNCE                =   0x004D,$/;"	e	enum:__anon5
MSG_SIMPLE_DESCRIPTOR_REQUEST	include/zdo.h	/^    MSG_SIMPLE_DESCRIPTOR_REQUEST      =   0x0043,    $/;"	e	enum:__anon5
MSG_SIMPLE_DESCRIPTOR_RESPONSE	include/zdo.h	/^    MSG_SIMPLE_DESCRIPTOR_RESPONSE     =   0x8043,$/;"	e	enum:__anon5
MSGfromAPStoAPP	source/main.c	/^void MSGfromAPStoAPP( DataIndication_t Msg )$/;"	f
MsgType	include/zdo.h	/^} MsgType;$/;"	t	typeref:enum:__anon5
NO_ACK	include/APS.h	/^    NO_ACK,$/;"	e	enum:__anon1
NO_SORT_ADDRESS	include/APS.h	/^    NO_SORT_ADDRESS,$/;"	e	enum:__anon1
NWK_FAILED	source/nwk.c	/^    NWK_FAILED,$/;"	e	enum:__anon15	file:
NWK_Init	source/nwk.c	/^int NWK_Init( int type )$/;"	f
NWK_Respnose_t	source/nwk.c	/^}NWK_Respnose_t;$/;"	t	typeref:enum:__anon15	file:
NWK_SUCCESS	source/nwk.c	/^    NWK_SUCCESS,$/;"	e	enum:__anon15	file:
NW_RegisterSapHandlers	source/nwk.c	/^void NW_RegisterSapHandlers(void (*MCPS_ZCL_SapHandler)( NwkMsg_t msg ), void ( *DeviceRemove )( uint16_t ID ))$/;"	f
NwkMsg_t	include/NWK.h	/^}NwkMsg_t;$/;"	t	typeref:struct:__anon6
ON_OFF_H	include/on_off.h	18;"	d
PACKED	include/APS.h	/^}PACKED ;$/;"	v	typeref:struct:DATA_Request
PACKED	include/APS.h	31;"	d
PACKED	include/zdo.h	24;"	d
PACKED	source/aps.c	18;"	d	file:
PACKET	source/aps.c	28;"	d	file:
PRINTD	include/global.h	22;"	d
PRINTD	include/global.h	24;"	d
PROFILE_IDENTIFIER	source/aps.c	25;"	d	file:
PWD	Makefile	/^PWD = `pwd`$/;"	m
ProfileId	include/APS.h	/^    uint16_t ProfileId;$/;"	m	struct:DATA_Request
ProfileId	include/APS.h	/^    uint16_t ProfileId;$/;"	m	struct:__anon4
QUEUESIZE	source/aps.c	19;"	d	file:
RADIUS	source/aps.c	29;"	d	file:
READ_ATTRIBUTE_ID	include/frame_structure.h	/^	READ_ATTRIBUTE_ID							= 0X00,$/;"	e	enum:__anon11
READ_ATTRIBUTE_REQUEST_H	include/read_attribute_request.h	19;"	d
READ_ATTRIBUTE_RESPONSE_H	include/read_attribute_response.h	19;"	d
READ_ATTRIBUTE_RESPONSE_ID	include/frame_structure.h	/^	READ_ATTRIBUTE_RESPONSE_ID					= 0X01,$/;"	e	enum:__anon11
READ_ATTRIBUTE_STRUCTURED_ID	include/frame_structure.h	/^	READ_ATTRIBUTE_STRUCTURED_ID				= 0X0e,$/;"	e	enum:__anon11
READ_REPORTING_CONFIGURATION_ID	include/frame_structure.h	/^	READ_REPORTING_CONFIGURATION_ID				= 0X08,$/;"	e	enum:__anon11
READ_REPORTING_CONFIGURATION_RESPONSE_ID	include/frame_structure.h	/^	READ_REPORTING_CONFIGURATION_RESPONSE_ID	= 0X09,$/;"	e	enum:__anon11
REPORT_ATTRIBUTES_ID	include/frame_structure.h	/^	REPORT_ATTRIBUTES_ID						= 0X0a,$/;"	e	enum:__anon11
RadiusCounter	include/APS.h	/^    uint8_t RadiusCounter;$/;"	m	struct:DATA_Request
RecvFromClient	source/nwk.c	/^void *RecvFromClient( void *data )$/;"	f
RecvFromServer	source/nwk.c	/^void *RecvFromServer( void *data )$/;"	f
RemoveDeviceFromList	source/nwk.c	/^void RemoveDeviceFromList( int client_sock )$/;"	f
RxTime	include/APS.h	/^    uint8_t RxTime;$/;"	m	struct:__anon4
SECURITY_FAIL	include/APS.h	/^    SECURITY_FAIL,$/;"	e	enum:__anon1
SECURITY_SUB_FIELD_DISABLE	source/aps.c	40;"	d	file:
SECURITY_SUB_FIELD_ENABLE	source/aps.c	41;"	d	file:
SERVER_TO_CLIENT	include/frame_structure.h	/^	SERVER_TO_CLIENT					=0b00001000,$/;"	e	enum:__anon12
SOURCE_ENDPOINT	source/aps.c	26;"	d	file:
SRC_DIR	Makefile	/^SRC_DIR = $(PWD)\/source$/;"	m
SUCCESS	include/APS.h	/^    SUCCESS,$/;"	e	enum:__anon1
SUCCESSFUL	include/global.h	49;"	d
SUPPORTED_CLUSTER	include/cluster_id.h	23;"	d
Security	include/APS.h	/^        char Security:1;    $/;"	m	struct:__anon2::__anon3
ServerInit	source/nwk.c	/^void *ServerInit( void *msg )$/;"	f
SrcAddress	include/APS.h	/^    uint8_t SrcAddress;	$/;"	m	struct:__anon4
SrcEndpoint	include/APS.h	/^    uint8_t SrcEndpoint;$/;"	m	struct:DATA_Request
SrcEndpoint	include/APS.h	/^    uint8_t SrcEndpoint;$/;"	m	struct:__anon4
Status	include/APS.h	/^    StatusConfirm_e Status;    $/;"	m	struct:__anon4
StatusConfirm_e	include/APS.h	/^}StatusConfirm_e; $/;"	t	typeref:enum:__anon1
TxOptions	include/APS.h	/^    uint8_t TxOptions;$/;"	m	struct:DATA_Request
UNSUCCESSFUL	include/global.h	50;"	d
UNSUPPORTED_ATTRIBUTE	include/global.h	51;"	d
VALID_DATA	include/global.h	52;"	d
WRITE_ATTRIBUTE_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_ID							= 0X02,$/;"	e	enum:__anon11
WRITE_ATTRIBUTE_NO_RESPONSE_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_NO_RESPONSE_ID				= 0X05,$/;"	e	enum:__anon11
WRITE_ATTRIBUTE_RESPONSE_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_RESPONSE_ID					= 0X04,$/;"	e	enum:__anon11
WRITE_ATTRIBUTE_STRUCTURED_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_STRUCTURED_ID				= 0X0f,$/;"	e	enum:__anon11
WRITE_ATTRIBUTE_STRUCTURED_RESPONSE_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_STRUCTURED_RESPONSE_ID		= 0X10$/;"	e	enum:__anon11
WRITE_ATTRIBUTE_UNDIVIDED_ID	include/frame_structure.h	/^	WRITE_ATTRIBUTE_UNDIVIDED_ID				= 0X03,$/;"	e	enum:__anon11
ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_OFF	include/on_off.h	/^	ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_OFF			= 0x00,$/;"	e	enum:__anon10
ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_ON	include/on_off.h	/^	ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_ON				= 0x01,$/;"	e	enum:__anon10
ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_TOGGLE	include/on_off.h	/^	ZCL_ATTRIBUTE_CLUSTER_SPECIFIC_ONOFF_TOGGLE			= 0x02,$/;"	e	enum:__anon10
ZCL_ATTRIBUTE_DATATYPE_ONOFF_ONOFF	include/on_off.h	/^	ZCL_ATTRIBUTE_DATATYPE_ONOFF_ONOFF		= 0x10,$/;"	e	enum:__anon8
ZCL_ATTRIBUTE_ID_ONOFF_ONOFF	include/on_off.h	/^	ZCL_ATTRIBUTE_ID_ONOFF_ONOFF			= 0x0000,$/;"	e	enum:__anon7
ZCL_ATTRIBUTE_SIZE_ONOFF_ONOFF	include/on_off.h	/^	ZCL_ATTRIBUTE_SIZE_ONOFF_ONOFF			= 1,$/;"	e	enum:__anon9
ZCL_CLUSTERID_ALARM	include/cluster_id.h	/^	ZCL_CLUSTERID_ALARM						= 0x0009,$/;"	e	enum:__anon13
ZCL_CLUSTERID_ANALOG_INPUT	include/cluster_id.h	/^	ZCL_CLUSTERID_ANALOG_INPUT				= 0x000c,$/;"	e	enum:__anon13
ZCL_CLUSTERID_ANALOG_OUTPUT	include/cluster_id.h	/^	ZCL_CLUSTERID_ANALOG_OUTPUT				= 0x000d,$/;"	e	enum:__anon13
ZCL_CLUSTERID_BASIC	include/cluster_id.h	/^	ZCL_CLUSTERID_BASIC 					= 0x0000,$/;"	e	enum:__anon13
ZCL_CLUSTERID_BINARY_INPUT	include/cluster_id.h	/^	ZCL_CLUSTERID_BINARY_INPUT				= 0x000f,$/;"	e	enum:__anon13
ZCL_CLUSTERID_BINARY_OUTPUT	include/cluster_id.h	/^	ZCL_CLUSTERID_BINARY_OUTPUT				= 0x0010$/;"	e	enum:__anon13
ZCL_CLUSTERID_COMMISIONING	include/cluster_id.h	/^	ZCL_CLUSTERID_COMMISIONING				= 0x0015,$/;"	e	enum:__anon13
ZCL_CLUSTERID_DEVICE_TEMPERATURE	include/cluster_id.h	/^	ZCL_CLUSTERID_DEVICE_TEMPERATURE		= 0x0002,$/;"	e	enum:__anon13
ZCL_CLUSTERID_IDENTIFY	include/cluster_id.h	/^	ZCL_CLUSTERID_IDENTIFY					= 0x0003,$/;"	e	enum:__anon13
ZCL_CLUSTERID_LEVEL_CONTROL	include/cluster_id.h	/^	ZCL_CLUSTERID_LEVEL_CONTROL				= 0x0008,$/;"	e	enum:__anon13
ZCL_CLUSTERID_LOCATION	include/cluster_id.h	/^	ZCL_CLUSTERID_LOCATION					= 0x000b,$/;"	e	enum:__anon13
ZCL_CLUSTERID_ONOFF	include/cluster_id.h	/^	ZCL_CLUSTERID_ONOFF						= 0x0006,$/;"	e	enum:__anon13
ZCL_CLUSTERID_POWER	include/cluster_id.h	/^	ZCL_CLUSTERID_POWER						= 0x0001,$/;"	e	enum:__anon13
ZCL_CLUSTERID_TIME	include/cluster_id.h	/^	ZCL_CLUSTERID_TIME						= 0x000a,$/;"	e	enum:__anon13
ZCL_Cluster_Id	include/cluster_id.h	/^} ZCL_Cluster_Id;$/;"	t	typeref:enum:__anon13
ZCL_H	include/zcl.h	19;"	d
ZDO_H	include/zdo.h	19;"	d
ZDO_Start	source/zdo.c	/^void ZDO_Start(int node)$/;"	f
_SimpleDescriptor	include/zdo.h	/^struct _SimpleDescriptor$/;"	s
__APS__	include/APS.h	19;"	d
__NWK__	include/NWK.h	19;"	d
annce	include/zdo.h	/^struct annce                                                                $/;"	s
attributeId	include/global.h	/^        uint16_t attributeId;$/;"	m	struct:command
attribute_data_type_onoff_cluster_e	include/on_off.h	/^} attribute_data_type_onoff_cluster_e;$/;"	t	typeref:enum:__anon8
attribute_id_onoff_cluster_e	include/on_off.h	/^} attribute_id_onoff_cluster_e;$/;"	t	typeref:enum:__anon7
attribute_size_onoff_cluster_e	include/on_off.h	/^} attribute_size_onoff_cluster_e;$/;"	t	typeref:enum:__anon9
capability	include/zdo.h	/^    uint8_t capability;                                                     $/;"	m	struct:annce
client_ip	source/nwk.c	/^    char client_ip[ MAXSIZE ]; $/;"	m	struct:list	file:
client_sid	source/nwk.c	/^    int client_sid;$/;"	m	struct:list	file:
client_socket	source/nwk.c	/^int client_socket;$/;"	v
clrscr	source/myutility.c	/^void clrscr()$/;"	f
clusterId	include/global.h	/^        uint16_t clusterId;$/;"	m	struct:command
clusterId	include/zdo.h	/^    uint16_t clusterId;                                                         $/;"	m	struct:descRsp
clusterId	include/zdo.h	/^    uint16_t clusterId;$/;"	m	struct:device
clusterSpecific	include/global.h	/^        bool clusterSpecific;			\/\/ 1 for yes, 0 for not$/;"	m	struct:command
cluster_specific_command_onoff_cluster_e	include/on_off.h	/^} cluster_specific_command_onoff_cluster_e;$/;"	t	typeref:enum:__anon10
comman_h	include/myutility.h	20;"	d
command	include/global.h	/^struct command {$/;"	s
commandId	include/global.h	/^        uint8_t commandId;$/;"	m	struct:command
commandIdentifier	include/frame_structure.h	/^} commandIdentifier;$/;"	t	typeref:enum:__anon11
cordHandler	source/zdo.c	/^void *cordHandler(void *arg)$/;"	f
data	include/global.h	/^        uint16_t data;$/;"	m	struct:command
dataZDA	include/zdo.h	/^typedef struct dataZDA                                                              $/;"	s
decodeClusterSpecificPacket	source/cluster_command.c	/^int decodeClusterSpecificPacket ( struct command *_cmd, void **_packet, int *_length )$/;"	f
descResponse	include/zdo.h	/^struct descResponse                                                             $/;"	s
descRsp	include/zdo.h	/^struct descRsp                                                                  $/;"	s
descriptorReq	include/zdo.h	/^struct descriptorReq$/;"	s
devId	include/zdo.h	/^    uint16_t devId;                                                         $/;"	m	struct:annce
device	include/zdo.h	/^typedef struct device$/;"	s
deviceId	include/zdo.h	/^    uint16_t deviceId;$/;"	m	struct:device
deviceList	include/zdo.h	/^} deviceList;$/;"	t	typeref:struct:device
deviceType	include/zdo.h	/^    char deviceType[20];$/;"	m	struct:device
device_data	source/global.c	/^void *device_data[5];$/;"	v
device_id	include/NWK.h	/^    uint16_t device_id;$/;"	m	struct:__anon6
device_id	source/nwk.c	/^    uint16_t  device_id;$/;"	m	struct:list	file:
display	source/zdo.c	/^void display(deviceList* head)$/;"	f
end	source/myutility.c	/^void end()$/;"	f
findEntry	source/zdo.c	/^int findEntry(uint16_t id)$/;"	f
flush	source/myutility.c	/^void flush()$/;"	f
frame	include/zdo.h	/^newFrame *frame;$/;"	v
frameControl	include/frame_structure.h	/^} frameControl;$/;"	t	typeref:enum:__anon12
frameD	include/zdo.h	/^} *frameD;$/;"	v	typeref:struct:descriptorReq
frameRsp	include/zdo.h	/^} *frameRsp;$/;"	v	typeref:struct:descResponse
frame_decoder	source/aps.c	/^void *frame_decoder( void *msg )$/;"	f
frame_t	include/APS.h	/^}PACKED frame_t;$/;"	t	typeref:struct:APS_Frame
g_device_list	source/nwk.c	/^int g_device_list[MAXDEVICE]; $/;"	v
g_root	source/nwk.c	/^struct list *g_root; $/;"	v	typeref:struct:list
getDevice	source/zdo.c	/^deviceList *getDevice()$/;"	f
head	include/zdo.h	/^deviceList *head;$/;"	v
iEEEAdd	include/zdo.h	/^    uint64_t iEEEAdd;                                                       $/;"	m	struct:annce
id	source/nwk.c	/^int id;$/;"	v
list	source/nwk.c	/^typedef struct list$/;"	s	file:
main	source/main.c	/^int main()$/;"	f
maintainTable	source/zdo.c	/^void maintainTable(uint16_t shortAddr, uint16_t clusterId)$/;"	f
makeClusterSpecificPacket	source/cluster_command.c	/^int makeClusterSpecificPacket ( struct command *_cmd, void **_packet, int *_length )$/;"	f
mutex	source/nwk.c	/^sem_t mutex;$/;"	v
name	include/myutility.h	/^    char name[20];$/;"	m	struct:__anon14
newFrame	include/zdo.h	/^} newFrame;$/;"	t	typeref:struct:dataZDA
next	include/zdo.h	/^    struct device *next;$/;"	m	struct:device	typeref:struct:device::device
next	source/nwk.c	/^    struct list *next;$/;"	m	struct:list	typeref:struct:list::list	file:
onOff	include/on_off.h	/^	bool onOff;$/;"	m	struct:on_off
on_off	include/on_off.h	/^struct on_off{$/;"	s
onoffInit	source/on_off.c	/^void onoffInit()$/;"	f
onoff_t	include/on_off.h	/^} onoff_t;$/;"	v	typeref:struct:on_off
packet	include/APS.h	/^    uint8_t packet[100];$/;"	m	struct:APS_Frame
packet	include/NWK.h	/^    uint8_t packet[500];$/;"	m	struct:__anon6
packet_length	include/NWK.h	/^    uint16_t packet_length;$/;"	m	struct:__anon6
payLoad	include/zdo.h	/^    struct _SimpleDescriptor payLoad;$/;"	m	struct:descriptorReq	typeref:struct:descriptorReq::_SimpleDescriptor
payLoad	include/zdo.h	/^    struct annce payLoad;                                                   $/;"	m	struct:dataZDA	typeref:struct:dataZDA::annce
payLoad	include/zdo.h	/^    struct descRsp payLoad;                                                     $/;"	m	struct:descResponse	typeref:struct:descResponse::descRsp
position	source/zdo.c	/^int position = 0;$/;"	v
raw	include/APS.h	/^    uint8_t raw;$/;"	m	union:__anon2
readAttributeRequest	source/read_attribute_request.c	/^int readAttributeRequest ( struct command *_cmd, void **_packet, int *_len )$/;"	f
readAttributeRequestDecoder	source/read_attribute_request.c	/^int readAttributeRequestDecoder ( struct command *_cmd, void **_packet, int *_len )$/;"	f
readAttributeResponse	source/read_attribute_response.c	/^int readAttributeResponse ( struct command *_cmd, void **_packet, int *_len )$/;"	f
readAttributeResponseDecoder	source/read_attribute_response.c	/^int readAttributeResponseDecoder(struct command *_cmd, void **_packet,int *_len)$/;"	f
removeDevice	source/zdo.c	/^void removeDevice(uint16_t remId)$/;"	f
sSimpleDescriptor	include/zdo.h	/^} sSimpleDescriptor;$/;"	v	typeref:struct:_SimpleDescriptor
shortAddr	include/zdo.h	/^    uint16_t shortAddr;                                                         $/;"	m	struct:descRsp
simpleDescReq	source/zdo.c	/^void simpleDescReq(uint16_t add)$/;"	f
simpleDescRsp	source/zdo.c	/^void simpleDescRsp(uint16_t addr)$/;"	f
smart_bulb	source/light.c	/^void smart_bulb(int id)$/;"	f
socket_desc	source/nwk.c	/^int socket_desc;$/;"	v
status	include/myutility.h	/^    int status;$/;"	m	struct:__anon14
term	source/zdo.c	/^int term = 1;$/;"	v
u16ClusterIdentifier	include/APS.h	/^    uint16_t u16ClusterIdentifier;$/;"	m	struct:APS_Frame
u16GroupAddress	include/APS.h	/^    uint16_t u16GroupAddress;$/;"	m	struct:APS_Frame
u16Length	include/zdo.h	/^    uint16_t u16Length;                                                         $/;"	m	struct:descResponse
u16Length	include/zdo.h	/^    uint16_t u16Length;                                                     $/;"	m	struct:dataZDA
u16Length	include/zdo.h	/^    uint16_t u16Length;$/;"	m	struct:descriptorReq
u16MsgType	include/zdo.h	/^    uint16_t u16MsgType;                                                        $/;"	m	struct:descResponse
u16MsgType	include/zdo.h	/^    uint16_t u16MsgType;$/;"	m	struct:descriptorReq
u16ProfileIdentifier	include/APS.h	/^    uint16_t u16ProfileIdentifier;$/;"	m	struct:APS_Frame
u16TargetAddress	include/zdo.h	/^    uint16_t    u16TargetAddress;$/;"	m	struct:_SimpleDescriptor
u16Type	include/zdo.h	/^    uint16_t u16Type;                                                       $/;"	m	struct:dataZDA
u8APSCounter	include/APS.h	/^    uint8_t u8APSCounter;$/;"	m	struct:APS_Frame
u8DestinationEndPoint	include/APS.h	/^    uint8_t u8DestinationEndPoint;$/;"	m	struct:APS_Frame
u8Endpoint	include/zdo.h	/^    uint8_t     u8Endpoint;$/;"	m	struct:_SimpleDescriptor
u8SourceEndPoint	include/APS.h	/^    uint8_t u8SourceEndPoint;$/;"	m	struct:APS_Frame
validateClusterId	source/cluster_id.c	/^int validateClusterId ( uint16_t _clusterId, uint16_t _arr )$/;"	f
validateOnOffAttr	source/on_off.c	/^int validateOnOffAttr ( uint16_t _arr )$/;"	f
zclDecoder	source/zcl.c	/^int zclDecoder ( struct command *_cmd, void **_packet, int *_len )$/;"	f
zclEncoder	source/zcl.c	/^int zclEncoder ( struct command *_cmd, void **_packet, int *_len )$/;"	f
